#!/usr/bin/env bash

virtual=0

kernel_name=$(uname -r);

if [[ ! $kernel_name == *-rt* ]]
then
  echo "You don't seem to be running on the realtime kernel."
  echo "The name should contain \"-rt\""
  echo "Your is $kernel_name"
  echo "Please reboot and choose a realtime kernel"
  exit
fi

LOCKFILE=/tmp/m3rt_server.lock

function cleanup {
    echo cleanup
    rm $LOCKFILE
}

# if lockfile exists, try to kill the pid
if [ -f "$LOCKFILE" ]; then
    m3rt_server_kill
fi

function kill_and_clean {
    echo killing
    kill -SIGINT $PID
    cleanup
}
trap kill_and_clean SIGHUP SIGINT SIGTERM

if $(m3rt_check_server.py) 2>/dev/null ; then
    if [ $virtual = 0 ]; then
        echo 'Checking Ethercat'
        m3rt_ethercat_check
        test_ethercat=$?
        if [ test_ethercat = 0 ]; then
           echo 'EtherCAT failed to initialize components, please run lsec for debug.'
                exit
        fi
    fi
    echo 'Running insmods'
    m3rt_insmods
    echo 'Sleeping after insmods'
    sync
    sleep 4
    echo 'Running m3rt server'
    m3rt_server.py $@ &
    PID=$!
    # write pid to lockfile
    echo $PID > $LOCKFILE

    while kill -0 $PID 2> /dev/null; do
        sleep 1
    done

    echo 'Running rmmods'
    m3rt_rmmods
else
    echo 'Server already running, abording'
fi




