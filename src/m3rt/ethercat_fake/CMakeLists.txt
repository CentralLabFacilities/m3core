cmake_minimum_required(VERSION 2.8)
project(ethercat_fake)

find_package(RTAI REQUIRED)
find_package(M3rt)
include_directories(${M3RT_INCLUDE_DIR})

SET( MODULE_NAME
	m3ec
)

SET( MODULE_SOURCE_FILES
	m3ec.c
)

SET( MODULE_FILE
	${MODULE_NAME}.ko
)

SET( MODULE_OUTPUT_DIR
	${CMAKE_CURRENT_BINARY_DIR}
)

SET( KERNEL_DIR
	"/lib/modules/${CMAKE_SYSTEM_VERSION}/build"
)

SET( KBUILD_COMMAND
	${CMAKE_MAKE_PROGRAM} -C ${KERNEL_DIR} M=${MODULE_OUTPUT_DIR} modules
)
CONFIGURE_FILE(
	Kbuild.in
	${MODULE_OUTPUT_DIR}/Kbuild
)
FOREACH( MODULE_SOURCE_FILE ${MODULE_SOURCE_FILES} )
message("MODULE_SOURCE_FILE:${MODULE_SOURCE_FILE}")
	CONFIGURE_FILE(
		${MODULE_SOURCE_FILE}
		${MODULE_OUTPUT_DIR}/${MODULE_SOURCE_FILE}
		COPYONLY
	)
ENDFOREACH( MODULE_SOURCE_FILE )

ADD_CUSTOM_COMMAND(
	OUTPUT ${MODULE_OUTPUT_DIR}/${MODULE_FILE}
	COMMAND ${KBUILD_COMMAND}
	WORKING_DIRECTORY ${MODULE_OUTPUT_DIR}
	DEPENDS ${MODULE_SOURCE_FILES} Kbuild.in
	VERBATIM
)

ADD_CUSTOM_TARGET(
	${MODULE_NAME}
	ALL
	DEPENDS ${MODULE_OUTPUT_DIR}/${MODULE_FILE}
)
Install(FILES ${MODULE_FILE} DESTINATION /lib/modules/${CMAKE_SYSTEM_VERSION}/extra/)
